---
layout: "rabbitmq"
page_title: "RabbitMQ: rabbitmq_federation_upstream"
sidebar_current: "docs-rabbitmq-resource-federation-upstream"
description: |-
  Creates and manages a federation upstream on a RabbitMQ server.
---

# rabbitmq\_federation\_upstream

The ``rabbitmq_federation_upstream`` resource creates and manages a federation upstream parameter.

## Example Usage

```hcl
resource "rabbitmq_vhost" "test" {
  name = "test"
}

resource "rabbitmq_permissions" "guest" {
  user = "guest"
  vhost = rabbitmq_vhost.test.name
  permissions {
    configure = ".*"
    write = ".*"
    read = ".*"
  }
}

// downstream exchange
resource "rabbitmq_exchange" "foo" {
  name  = "foo"
  vhost = rabbitmq_permissions.guest.vhost

  settings {
    type    = "topic"
    durable = "true"
  }
}

// upstream broker
resource "rabbitmq_federation_upstream" "foo" {
  name = "foo"
  vhost = rabbitmq_permissions.guest.vhost

  definition {
    uri = "amqp://guest:guest@upstream-server-name:5672/%2f"
    prefetch_count = 1000
    reconnect_delay = 5
    ack_mode = "on-confirm"
    trust_user_id = false
    max_hops = 1
  }
}

resource "rabbitmq_policy" "foo" {
  name  = "foo"
  vhost = rabbitmq_permissions.guest.vhost

  policy {
    pattern  = "(^${rabbitmq_exchange.foo.name}$)"
    priority = 1
    apply_to = "exchanges"

    definition = {
      federation-upstream = rabbitmq_federation_upstream.foo.name
    }
  }
}

```

{{ .SchemaMarkdown | trimspace }}

## Import

A Federation upstream can be imported using the resource `id` which is composed of `name@vhost`, e.g.

```sh
terraform import rabbitmq_federation_upstream.foo foo@test
```
